{"ast":null,"code":"import _regeneratorRuntime from\"/home/sanjiv/Documents/Study Materials/Code/covid19-tracker/covid19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/sanjiv/Documents/Study Materials/Code/covid19-tracker/covid19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/sanjiv/Documents/Study Materials/Code/covid19-tracker/covid19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.css';import InfoBox from\"./components/InfoBox\";import Map from\"./components/Map\";import Table from\"./components/Table\";import LineGraph from\"./components/LineGraph\";import{sortData}from\"./Utils/Sort\";import{prettyPrint}from\"./Utils/PrettyPrint\";import{MenuItem,FormControl,Select,Card,CardContent}from\"@material-ui/core\";import{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState(\"worldwide\"),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),tableData=_useState8[0],setTableData=_useState8[1];var _useState9=useState({lat:34.80746,lng:-40.4796}),_useState10=_slicedToArray(_useState9,2),mapCenter=_useState10[0],setMapCenter=_useState10[1];var _useState11=useState(3),_useState12=_slicedToArray(_useState11,2),mapZoom=_useState12[0],setMapZoom=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),mapCountries=_useState14[0],setMapCountries=_useState14[1];var _useState15=useState(\"cases\"),_useState16=_slicedToArray(_useState15,2),casesType=_useState16[0],setCasesType=_useState16[1];useEffect(function(){fetch(\"https://disease.sh/v3/covid-19/all\").then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountriesData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});var sortedData=sortData(data);setTableData(sortedData);setCountries(countries);setMapCountries(data);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountriesData(){return _ref.apply(this,arguments);};}();getCountriesData();},[]);var onChangeCountry=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;setCountry(countryCode);url=countryCode==='worldwide'?'https://disease.sh/v3/covid-19/all':\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=5;return fetch(url).then(function(response){return response.json();}).then(function(data){setCountry(countryCode);setCountryInfo(data);setMapCenter([data.countryInfo.lat,data.countryInfo.long]);setMapZoom(4);console.log(\"Map Center >>\",mapCenter);});case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function onChangeCountry(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app__left\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"app__header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Covid 19 Tracker\"}),/*#__PURE__*/_jsx(FormControl,{className:\"app__dropdown\",children:/*#__PURE__*/_jsxs(Select,{variant:\"outlined\",onChange:onChangeCountry,value:country,children:[/*#__PURE__*/_jsx(MenuItem,{value:\"worldwide\",children:\"Worldwide\"}),countries.map(function(country){return/*#__PURE__*/_jsx(MenuItem,{value:country.value,children:country.name},country.name);})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"app__stats\",children:[/*#__PURE__*/_jsx(InfoBox,{active:casesType===\"cases\",isRed:true,onClick:function onClick(e){return setCasesType(\"cases\");},title:\"Coronavirus Cases\",cases:prettyPrint(countryInfo.todayCases),total:prettyPrint(countryInfo.cases)}),/*#__PURE__*/_jsx(InfoBox,{active:casesType===\"recovered\",onClick:function onClick(e){return setCasesType(\"recovered\");},title:\"Recoveries\",cases:prettyPrint(countryInfo.todayRecovered),total:prettyPrint(countryInfo.recovered)}),/*#__PURE__*/_jsx(InfoBox,{active:casesType===\"deaths\",isRed:true,onClick:function onClick(e){return setCasesType(\"deaths\");},title:\"Deaths\",cases:prettyPrint(countryInfo.todayDeaths),total:prettyPrint(countryInfo.deaths)})]}),/*#__PURE__*/_jsx(Map,{countries:mapCountries,center:mapCenter,zoom:mapZoom,casesType:casesType})]}),/*#__PURE__*/_jsx(Card,{className:\"app__right\",children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Live Cases by Country\"}),/*#__PURE__*/_jsx(Table,{countries:tableData}),/*#__PURE__*/_jsxs(\"h3\",{className:\"app__graphTitle\",children:[\"Worldwide new \",casesType]}),/*#__PURE__*/_jsx(LineGraph,{className:\"app_graph\",casesType:casesType})]})})]});}export default App;","map":{"version":3,"sources":["/home/sanjiv/Documents/Study Materials/Code/covid19-tracker/covid19-tracker/src/App.js"],"names":["InfoBox","Map","Table","LineGraph","sortData","prettyPrint","MenuItem","FormControl","Select","Card","CardContent","useEffect","useState","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onChangeCountry","event","countryCode","target","url","long","console","log","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import './App.css';\nimport InfoBox from \"./components/InfoBox\";\nimport Map from \"./components/Map\";\nimport Table from \"./components/Table\";\nimport LineGraph from \"./components/LineGraph\";\nimport { sortData } from \"./Utils/Sort\";\nimport { prettyPrint } from \"./Utils/PrettyPrint\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\"\nimport { useEffect, useState } from 'react';\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then(data => {\n        setCountryInfo(data);\n      })\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then(response => response.json())\n        .then(data => {\n          let countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }))\n\n          let sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(countries);\n          setMapCountries(data);\n        })\n    }\n\n    getCountriesData();\n  }, [])\n\n  const onChangeCountry = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' :\n      `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n        console.log(\"Map Center >>\", mapCenter);\n      })\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n\n          <h1>Covid 19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onChangeCountry}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {\n                countries.map((country) => (\n                  <MenuItem key={country.name} value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox\n            active={casesType === \"cases\"}\n            isRed\n            onClick={e => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            cases={prettyPrint(countryInfo.todayCases)}\n            total={prettyPrint(countryInfo.cases)} />\n\n          <InfoBox\n            active={casesType === \"recovered\"}\n            onClick={e => setCasesType(\"recovered\")}\n            title=\"Recoveries\"\n            cases={prettyPrint(countryInfo.todayRecovered)}\n            total={prettyPrint(countryInfo.recovered)} />\n\n          <InfoBox\n            active={casesType === \"deaths\"}\n            isRed\n            onClick={e => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            cases={prettyPrint(countryInfo.todayDeaths)}\n            total={prettyPrint(countryInfo.deaths)} />\n        </div>\n\n        <Map\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n          casesType={casesType}\n        />\n      </div>\n\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3 className=\"app__graphTitle\">Worldwide new {casesType}</h3>\n          <LineGraph className=\"app_graph\" casesType={casesType} />\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}