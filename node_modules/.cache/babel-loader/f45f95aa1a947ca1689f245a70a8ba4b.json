{"ast":null,"code":"var _jsxFileName = \"/home/sanjiv/Documents/Study Materials/Code/covid19-tracker/covid19-tracker/src/components/LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        // Include a dollar sign in the ticks\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\n\nfunction LineGraph({\n  caseType = \"cases\"\n}) {\n  _s();\n\n  const [data, setData] = useState({});\n\n  const buildChartData = data => {\n    const chartData = [];\n    let lastDataPoint;\n\n    for (let date in data[caseType]) {\n      if (lastDataPoint) {\n        const newDataPoint = {\n          x: date,\n          y: data[caseType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[caseType][data];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => response.json()).then(data => {\n        const chartData = buildChartData(data);\n        setData(chartData);\n      });\n    };\n\n    fetchData();\n  }, [caseType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          data: data,\n          backgroundColor: \"rgba(204, 16, 52, 0.1)\",\n          borderColor: \"#CC1034\"\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"sources":["/home/sanjiv/Documents/Study Materials/Code/covid19-tracker/covid19-tracker/src/components/LineGraph.js"],"names":["useEffect","useState","Line","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","caseType","setData","buildChartData","chartData","lastDataPoint","date","newDataPoint","x","y","push","fetchData","fetch","then","response","json","length","datasets","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport numeral from \"numeral\";\n\nconst options = {\n    legend: {\n        display: false,\n    },\n    elements: {\n        point: {\n            radius: 0,\n        },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        callbacks: {\n            label: function (tooltipItem, data) {\n                return numeral(tooltipItem.value).format(\"+0,0\");\n            },\n        },\n    },\n    scales: {\n        xAxes: [\n            {\n                type: \"time\",\n                time: {\n                    format: \"MM/DD/YY\",\n                    tooltipFormat: \"ll\",\n                },\n            },\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    // Include a dollar sign in the ticks\n                    callback: function (value, index, values) {\n                        return numeral(value).format(\"0a\");\n                    },\n                },\n            },\n        ],\n    },\n};\n\nfunction LineGraph({ caseType = \"cases\" }) {\n    const [data, setData] = useState({});\n\n    const buildChartData = (data) => {\n        const chartData = [];\n        let lastDataPoint;\n        for (let date in data[caseType]) {\n            if (lastDataPoint) {\n                const newDataPoint = {\n                    x: date,\n                    y: data[caseType][date] - lastDataPoint\n                }\n                chartData.push(newDataPoint);\n            }\n            lastDataPoint = data[caseType][data];\n\n        }\n        return chartData;\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n                .then(response => response.json())\n                .then(data => {\n                    const chartData = buildChartData(data);\n                    setData(chartData);\n                })\n        }\n        fetchData();\n\n    }, [caseType])\n\n    return (\n        <div>\n            {data?.length > 0 && (\n                <Line\n                    options={options}\n                    data={{\n                        datasets: [{\n                            data: data,\n                            backgroundColor: \"rgba(204, 16, 52, 0.1)\",\n                            borderColor: \"#CC1034\"\n                        }\n                        ]\n                    }}\n                />\n            )}\n\n\n        </div>\n    )\n}\n\nexport default LineGraph;"]},"metadata":{},"sourceType":"module"}