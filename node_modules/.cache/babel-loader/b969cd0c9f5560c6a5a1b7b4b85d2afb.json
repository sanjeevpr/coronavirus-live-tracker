{"ast":null,"code":"var _jsxFileName = \"/home/sanjiv/Documents/Study Materials/Code/covid19-tracker/covid19-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport InfoBox from \"./components/InfoBox\";\nimport Map from \"./components/Map\";\nimport Table from \"./components/Table\";\nimport LineGraph from \"./components/LineGraph\";\nimport { sortData } from \"./Utils/Sort\";\nimport { prettyPrint } from \"./Utils/PrettyPrint\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  useEffect(() => {\n    document.title = \"Covid 19 Live Tracker\";\n  }, []);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        let countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        let sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n        setMapCountries(data);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onChangeCountry = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid 19 Live Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onChangeCountry,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, country.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          active: casesType === \"cases\",\n          isRed: true,\n          onClick: e => setCasesType(\"cases\"),\n          title: \"Coronavirus Cases\",\n          cases: prettyPrint(countryInfo.todayCases),\n          total: prettyPrint(countryInfo.cases)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          active: casesType === \"recovered\",\n          onClick: e => setCasesType(\"recovered\"),\n          title: \"Recoveries\",\n          cases: prettyPrint(countryInfo.todayRecovered),\n          total: prettyPrint(countryInfo.recovered)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          active: casesType === \"deaths\",\n          isRed: true,\n          onClick: e => setCasesType(\"deaths\"),\n          title: \"Deaths\",\n          cases: prettyPrint(countryInfo.todayDeaths),\n          total: prettyPrint(countryInfo.deaths)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        countries: mapCountries,\n        center: mapCenter,\n        zoom: mapZoom,\n        casesType: casesType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"app__graphTitle\",\n          children: [\"Worldwide new \", casesType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n          className: \"app_graph\",\n          casesType: casesType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5X0WOGCC+ViMnLq6gMdYnDc7JWw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sanjiv/Documents/Study Materials/Code/covid19-tracker/covid19-tracker/src/App.js"],"names":["InfoBox","Map","Table","LineGraph","sortData","prettyPrint","MenuItem","FormControl","Select","Card","CardContent","useEffect","useState","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","document","title","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onChangeCountry","event","countryCode","target","url","long","e","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import './App.css';\nimport InfoBox from \"./components/InfoBox\";\nimport Map from \"./components/Map\";\nimport Table from \"./components/Table\";\nimport LineGraph from \"./components/LineGraph\";\nimport { sortData } from \"./Utils/Sort\";\nimport { prettyPrint } from \"./Utils/PrettyPrint\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\"\nimport { useEffect, useState } from 'react';\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    document.title = \"Covid 19 Live Tracker\"\n }, []);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then(data => {\n        setCountryInfo(data);\n      })\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then(response => response.json())\n        .then(data => {\n          let countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }))\n\n          let sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(countries);\n          setMapCountries(data);\n        })\n    }\n\n    getCountriesData();\n  }, [])\n\n  const onChangeCountry = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' :\n      `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      })\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n\n          <h1>Covid 19 Live Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onChangeCountry}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {\n                countries.map((country) => (\n                  <MenuItem key={country.name} value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox\n            active={casesType === \"cases\"}\n            isRed\n            onClick={e => setCasesType(\"cases\")}\n            title=\"Coronavirus Cases\"\n            cases={prettyPrint(countryInfo.todayCases)}\n            total={prettyPrint(countryInfo.cases)} />\n\n          <InfoBox\n            active={casesType === \"recovered\"}\n            onClick={e => setCasesType(\"recovered\")}\n            title=\"Recoveries\"\n            cases={prettyPrint(countryInfo.todayRecovered)}\n            total={prettyPrint(countryInfo.recovered)} />\n\n          <InfoBox\n            active={casesType === \"deaths\"}\n            isRed\n            onClick={e => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            cases={prettyPrint(countryInfo.todayDeaths)}\n            total={prettyPrint(countryInfo.deaths)} />\n        </div>\n\n        <Map\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n          casesType={casesType}\n        />\n      </div>\n\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3 className=\"app__graphTitle\">Worldwide new {casesType}</h3>\n          <LineGraph className=\"app_graph\" casesType={casesType} />\n        </CardContent>\n      </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}