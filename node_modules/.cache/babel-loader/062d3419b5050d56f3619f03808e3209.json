{"ast":null,"code":"var _jsxFileName = \"/home/sanjiv/Documents/Study Materials/Code/covid19-tracker/covid19-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport InfoBox from \"./components/InfoBox\";\nimport Map from \"./components/Map\";\nimport Table from \"./components/Table\";\nimport LineGraph from \"./components/LineGraph\";\nimport { sortData } from \"./Utils/Sort\";\nimport { MenuItem, FormControl, Select, Card, CardContent } from \"@material-ui/core\";\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\").then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        const sortedData = sortData(data);\n        setTableData(sortedData);\n        setCountries(countries);\n      });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onChangeCountry = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n    });\n    console.log(\"Country info\", countryInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Covid 19 Tracker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          className: \"app__dropdown\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            variant: \"outlined\",\n            onChange: onChangeCountry,\n            value: country,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"worldwide\",\n              children: \"Worldwide\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: country.value,\n              children: country.name\n            }, country.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app__stats\",\n        children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Coronavirus Cases\",\n          cases: countryInfo.todayCases,\n          total: countryInfo.cases\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Recoveries\",\n          cases: countryInfo.todayRecovered,\n          total: countryInfo.recovered\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n          title: \"Deaths\",\n          cases: countryInfo.todayDeaths,\n          total: countryInfo.deaths\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"app__right\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Live Cases by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          countries: tableData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Worldwide new cases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LineGraph, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Re6baA3+R4AWDqD1PhLaEsmBkqs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sanjiv/Documents/Study Materials/Code/covid19-tracker/covid19-tracker/src/App.js"],"names":["InfoBox","Map","Table","LineGraph","sortData","MenuItem","FormControl","Select","Card","CardContent","useEffect","useState","App","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onChangeCountry","event","countryCode","target","url","console","log","todayCases","cases","todayRecovered","recovered","todayDeaths","deaths"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SACEC,QADF,EAEEC,WAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,WALF,QAMO,mBANP;AAOA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AACA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,WAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZP,MAAAA,cAAc,CAACO,IAAD,CAAd;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMgB,gBAAgB,GAAG,YAAY;AACnC,YAAML,KAAK,CAAC,0CAAD,CAAL,CACHC,IADG,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEHF,IAFG,CAEEG,IAAI,IAAI;AACZ,cAAMZ,SAAS,GAAGY,IAAI,CAACE,GAAL,CAAUZ,OAAD,KAAc;AACvCa,UAAAA,IAAI,EAAEb,OAAO,CAACA,OADyB;AAEvCc,UAAAA,KAAK,EAAEd,OAAO,CAACE,WAAR,CAAoBa;AAFY,SAAd,CAAT,CAAlB;AAKA,cAAMC,UAAU,GAAG3B,QAAQ,CAACqB,IAAD,CAA3B;AACAL,QAAAA,YAAY,CAACW,UAAD,CAAZ;AACAjB,QAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,OAXG,CAAN;AAYD,KAbD;;AAeAa,IAAAA,gBAAgB;AACjB,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,QAAMM,eAAe,GAAG,MAAOC,KAAP,IAAiB;AACvC,UAAMC,WAAW,GAAGD,KAAK,CAACE,MAAN,CAAaN,KAAjC;AACAb,IAAAA,UAAU,CAACkB,WAAD,CAAV;AAEA,UAAME,GAAG,GAAGF,WAAW,KAAK,WAAhB,GAA8B,oCAA9B,GACT,4CAA2CA,WAAY,EAD1D;AAGA,UAAMb,KAAK,CAACe,GAAD,CAAL,CACHd,IADG,CACEC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADd,EAEHF,IAFG,CAEEG,IAAI,IAAI;AACZT,MAAAA,UAAU,CAACkB,WAAD,CAAV;AACAhB,MAAAA,cAAc,CAACO,IAAD,CAAd;AACD,KALG,CAAN;AAOAY,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BrB,WAA5B;AACD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAC,eAAvB;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,UADV;AAEE,YAAA,QAAQ,EAAEe,eAFZ;AAGE,YAAA,KAAK,EAAEjB,OAHT;AAAA,oCAKE,QAAC,QAAD;AAAU,cAAA,KAAK,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,EAOIF,SAAS,CAACc,GAAV,CAAeZ,OAAD,iBACZ,QAAC,QAAD;AAA8B,cAAA,KAAK,EAAEA,OAAO,CAACc,KAA7C;AAAA,wBAAqDd,OAAO,CAACa;AAA7D,eAAeb,OAAO,CAACc,KAAvB;AAAA;AAAA;AAAA;AAAA,oBADF,CAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,mBAAf;AAAmC,UAAA,KAAK,EAAEZ,WAAW,CAACsB,UAAtD;AAAkE,UAAA,KAAK,EAAEtB,WAAW,CAACuB;AAArF;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,YAAf;AAA4B,UAAA,KAAK,EAAEvB,WAAW,CAACwB,cAA/C;AAA+D,UAAA,KAAK,EAAExB,WAAW,CAACyB;AAAlF;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAC,QAAf;AAAwB,UAAA,KAAK,EAAEzB,WAAW,CAAC0B,WAA3C;AAAwD,UAAA,KAAK,EAAE1B,WAAW,CAAC2B;AAA3E;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eA2BE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA+BE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA,6BACE,QAAC,WAAD;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,SAAS,EAAEzB;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GAhGQP,G;;KAAAA,G;AAkGT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport InfoBox from \"./components/InfoBox\";\nimport Map from \"./components/Map\";\nimport Table from \"./components/Table\";\nimport LineGraph from \"./components/LineGraph\";\nimport { sortData } from \"./Utils/Sort\";\nimport {\n  MenuItem,\n  FormControl,\n  Select,\n  Card,\n  CardContent\n} from \"@material-ui/core\"\nimport { useEffect, useState } from 'react';\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then(data => {\n        setCountryInfo(data);\n      })\n  }, [])\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then(response => response.json())\n        .then(data => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }))\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(countries);\n        })\n    }\n\n    getCountriesData();\n  }, [])\n\n  const onChangeCountry = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url = countryCode === 'worldwide' ? 'https://disease.sh/v3/covid-19/all' :\n      `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n      })\n\n    console.log(\"Country info\", countryInfo)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n\n          <h1>Covid 19 Tracker</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onChangeCountry}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {\n                countries.map((country) => (\n                  <MenuItem key={country.value} value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n            </Select>\n          </FormControl>\n\n        </div>\n\n        <div className=\"app__stats\">\n          <InfoBox title=\"Coronavirus Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n          <InfoBox title=\"Recoveries\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n          <InfoBox title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n        </div>\n\n        <Map />\n      </div>\n\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide new cases</h3>\n          <LineGraph />\n        </CardContent>\n        { /* Table */}\n        { /* Graph */}\n      </Card>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}